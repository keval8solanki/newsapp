{"version":3,"sources":["Component/UploadVideo.js","Component/NewsItems.js","Component/Timeline.js","Component/DisplayVideos.js","Component/Header.js","App.js","serviceWorker.js","index.js"],"names":["UploadVideo","props","useState","file","data","setdata","message","setmessage","color","whichStyle","setwhichStyle","btnVal","setbtnVal","submitClicked","setsubmitClicked","console","log","className","onSubmit","e","preventDefault","formData","FormData","append","axios","method","url","then","response","document","getElementById","value","catch","id","label","type","onChange","target","files","accept","disabled","style","NewsItems","path","itemKey","mode","link","href","src","img","alt","to","Timeline","thumbnailURL","setthumbnailURL","useEffect","aws","config","setPromisesDependency","update","accessKeyId","secretAccessKey","region","s3","S3","a","listObjectsV2","Bucket","promise","getdata","dontRenderThis","Contents","filter","item","Key","includes","map","err","error","list","key","split","DisplayVideos","videoKey","match","params","videoURL","controls","Header","activeStyle","opacity","exact","App","page","setpage","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20a75810.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst UploadVideo = (props) => {\r\n\r\n    const [data, setdata] = useState({ file: null })\r\n    const [message, setmessage] = useState(null)\r\n    const [whichStyle, setwhichStyle] = useState({ color: 'green' })\r\n    const [btnVal, setbtnVal] = useState('Upload')\r\n    const [videoURL, setvideoURL] = useState('')\r\n    const [submitClicked, setsubmitClicked] = useState(false)\r\n\r\n\r\n    const uploadEndpoint = 'https://newsapp-video-upload-api.herokuapp.com/upload'\r\n\r\n\r\n\r\n    const handleFileUpload = (e) => {\r\n        setdata({ file: e.target.files })\r\n        setmessage(null)\r\n    }\r\n    console.log(data.file)\r\n    if (data.file === null) {\r\n        console.log('true')\r\n    } else {\r\n        console.log('false')\r\n    }\r\n\r\n\r\n    const submitFile = (e) => {\r\n        e.preventDefault();\r\n        setbtnVal('Loading...')\r\n        let formData = new FormData();\r\n        formData.append('video', data.file[0]);\r\n        setsubmitClicked(true)\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: uploadEndpoint,\r\n            data: formData,\r\n            //headers: { 'Content-Type': 'multipart/form-data' }\r\n        })\r\n            .then(function (response) {\r\n\r\n                setsubmitClicked(false)\r\n                console.log(response)\r\n                setmessage('Video Upload Success')\r\n                setbtnVal('Upload')\r\n                setwhichStyle({ color: 'green' })\r\n                document.getElementById('input-video').value = null;\r\n            })\r\n            .catch(function (response) {\r\n                setsubmitClicked(false)\r\n                setmessage('Video Upload Failure')\r\n                setbtnVal('Upload')\r\n                setwhichStyle({ color: 'red' })\r\n                document.getElementById('input-video').value = null;\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form className='form-style' onSubmit={submitFile}>\r\n            <input id=\"input-video\" label='upload file' type='file' onChange={handleFileUpload} accept=\"video/*\" />\r\n            <button disabled={(!data.file) || submitClicked} className=\"submit-btn\" type='submit'>{btnVal}</button>\r\n            <p style={whichStyle} className=\"message\">{message}</p>\r\n\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\nexport default UploadVideo;","import React, { useState } from 'react'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst NewsItems = (props) => {\r\n    let path = `/${props.itemKey}`;\r\n    let mode = props.mode;\r\n    console.log(mode)\r\n    let link = null;\r\n\r\n    if (mode === 'normal') {\r\n        link = <a href={path} className=\"link\" ><li className=\"newsItems-main-li\"><div className=\"item-div-1\"><p className=\"defaultP source\">Source</p><p className=\"defaultP content\">Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quas laboriosam alias, neque soluta</p><p className=\"defaultP date\">June 10, 2020</p></div><div className=\"item-div-2\"><img className=\"thumbnail\" src={props.img} alt=\"\"></img></div></li></a>\r\n    } else {\r\n        link = (<NavLink className=\"link\" to={path} >\r\n            <li className=\"newsItems-main-li\">\r\n\r\n                <div className=\"item-div-1\">\r\n                    <p className=\"defaultP source\">Source</p>\r\n                    <p className=\"defaultP content\">Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quas laboriosam alias, neque soluta</p>\r\n                    <p className=\"defaultP date\">June 10, 2020</p>\r\n                </div>\r\n                <div className=\"item-div-2\">\r\n                    <img className=\"thumbnail\" src={props.img} alt=\"\"></img>\r\n                </div>\r\n            </li>\r\n        </NavLink >\r\n        )\r\n    }\r\n\r\n    console.log(link)\r\n    return (\r\n        <>\r\n            {link}\r\n        </>\r\n    )\r\n}\r\nexport default NewsItems;","import React, { useState, useEffect } from 'react'\r\n\r\nimport aws from 'aws-sdk';\r\nimport NewsItems from './NewsItems';\r\n\r\nconst Timeline = (props) => {\r\n\r\n\r\n    const preLink = `https://video-bucket-processed.s3.amazonaws.com/`;\r\n\r\n    const [thumbnailURL, setthumbnailURL] = useState([])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            aws.config.setPromisesDependency()\r\n            aws.config.update({\r\n                accessKeyId: 'AKIAJZZ3QXXO4CZKEFYA',\r\n                secretAccessKey: '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',\r\n                region: 'us-east-1'\r\n            })\r\n\r\n            const s3 = new aws.S3();\r\n\r\n            async function getdata() {\r\n                const response = await s3.listObjectsV2({\r\n                    Bucket: 'video-bucket-processed'\r\n                }).promise();\r\n                return response;\r\n            }\r\n\r\n            getdata()\r\n                .then(data => {\r\n\r\n                    if (props.dontRenderThis) {\r\n\r\n                    }\r\n                    const onlyThumbnail = data.Contents.filter(item => {\r\n                        if (item.Key.includes('/thumbs') && !item.Key.includes(props.dontRenderThis)) {\r\n                            return item.Key\r\n                        }\r\n                    })\r\n\r\n                    const thumbnailURL = onlyThumbnail.map(item => {\r\n                        return `${preLink}${item.Key}`\r\n\r\n                    })\r\n\r\n                    setthumbnailURL(thumbnailURL)\r\n\r\n                })\r\n                .catch(err => console.log(err))\r\n\r\n\r\n        } catch (error) {\r\n            console.log(`Your error is ${error}`)\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    // const videoELement = URL.map(item => {\r\n    //     return (\r\n    //         // 16:9\r\n    //         <video className=\"video\" key={item} controls height=\"225\" width=\"400\">\r\n    //             <source src={item}></source>\r\n    //         </video>\r\n    //     )\r\n    // })\r\n\r\n\r\n    const list = thumbnailURL.map(item => {\r\n        let key = item.split('/')[3]\r\n        console.log(key)\r\n        return (\r\n            <NewsItems key={key} itemKey={key} img={item} mode={props.mode} />\r\n        )\r\n    })\r\n\r\n    console.log(thumbnailURL)\r\n\r\n    return (\r\n        <div className=\"timeline-main-div\">\r\n\r\n            <ul className=\"list-container\">\r\n                {list}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Timeline;","import React, { useState, useEffect } from 'react'\r\nimport Timeline from './Timeline';\r\n\r\n\r\n\r\nconst DisplayVideos = (props) => {\r\n    let videoKey = props.match.params.id;\r\n    const preLink = `https://video-bucket-processed.s3.amazonaws.com/`;\r\n    const extention = '/web.mp4';\r\n\r\n    const videoURL = preLink + videoKey + extention;\r\n    return (\r\n        <div className=\"DisplayVideos-main-div\">\r\n\r\n            <h4 className=\"display-heading\">Top Coverage</h4>\r\n\r\n            <video className=\"video\" controls>\r\n                <source src={videoURL}></source>\r\n            </video>\r\n\r\n            <p className=\"defaultP time\" >1 hour ago</p>\r\n\r\n            <h4 className=\"display-heading\">More News</h4>\r\n            <Timeline dontRenderThis={videoKey} mode='normal' />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default DisplayVideos;","import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nconst Header = (props) => {\r\n    return (\r\n\r\n        <header className=\"timeline-header\">\r\n            <div className=\"header-div\">\r\n                <NavLink activeStyle={{ opacity: '1' }} className=\"link header-link\" to=\"/newsapp\" exact>Timeline</NavLink>\r\n                <NavLink activeStyle={{ opacity: '1' }} className=\"link header-link\" to=\"/newsapp/upload\" >Upload</NavLink>\r\n            </div>\r\n        </header>\r\n\r\n    )\r\n}\r\nexport default Header;","import React, { useState } from 'react';\nimport UploadVideo from './Component/UploadVideo';\nimport DisplayVideos from './Component/DisplayVideos';\nimport Timeline from './Component/Timeline';\nimport Header from './Component/Header';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\n\nconst App = () => {\n\n  const [page, setpage] = useState('timeline')\n\n  // let currentPage = page === 'timeline' ? <Timeline /> : <UploadVideo />\n  console.log(page)\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header setpage={setpage} />\n        <Switch>\n          <Route path=\"/newsapp\" component={Timeline} />\n\n          <Route path=\"/newsapp/upload\" component={UploadVideo} />\n          <Route path=\"/newsapp/:id\" component={DisplayVideos} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}